@model ArboxEmployeeMS.Models.DashboardViewModel
@{ Layout="~/Views/Shared/_Layout.cshtml"; }
<div class="row g-4">
  <div class="col-md-4"><div class="card"><div class="card-body"><h5 class="card-title">Total Employees</h5><p class="display-6">@Model.TotalEmployees</p></div></div></div>
  <div class="col-md-8"><div class="card"><div class="card-body"><h5 class="card-title">Employees by Department</h5><canvas id="deptChart"></canvas></div></div></div>
</div>
<div class="row g-4 mt-1"><div class="col-12"><div class="card"><div class="card-body"><h5 class="card-title">Recent Hires (30 days)</h5>
<table class="table table-striped"><thead><tr><th>Name</th><th>Email</th><th>Hire Date</th><th>Salary</th></tr></thead><tbody>
@foreach (var e in Model.RecentHires){<tr><td>@(e.FirstName + " " + e.LastName)</td><td>@e.Email</td><td>@e.HireDate.ToString("yyyy-MM-dd")</td><td>@e.Salary.ToString("C")</td></tr>}
</tbody></table></div></div></div></div>
<script>
document.addEventListener("DOMContentLoaded", async ()=>{
  const res = await fetch("/Dashboard/EmployeesByDepartmentData");
  const data = await res.json();
  const ctx = document.getElementById("deptChart");
  new Chart(ctx, { type: "pie", data: { labels: data.map(d=>d.label), datasets: [{ data: data.map(d=>d.value) }] } });
});
</script>
